{"env_info": "sys.platform: win32\nPython: 3.8.16 | packaged by conda-forge | (default, Feb  1 2023, 15:53:35) [MSC v.1929 64 bit (AMD64)]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 3050 Ti Laptop GPU\nCUDA_HOME: C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.1\nNVCC: Cuda compilation tools, release 11.1, V11.1.105\nMSVC: \u7528\u4e8e x64 \u7684 Microsoft (R) C/C++ \u4f18\u5316\u7f16\u8bd1\u5668 19.29.30147 \u7248\nGCC: n/a\nPyTorch: 1.8.0\nPyTorch compiling details: PyTorch built with:\n  - C++ Version: 199711\n  - MSVC 192829337\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191125 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 2019\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.5\n  - Magma 2.5.4\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=C:/cb/pytorch_1000000000000/work/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /w /bigobj -DUSE_PTHREADPOOL -openmp:experimental -DNDEBUG -DUSE_FBGEMM -DUSE_XNNPACK, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, \n\nTorchVision: 0.9.0\nOpenCV: 4.7.0\nMMCV: 1.7.1\nMMCV Compiler: MSVC 192829924\nMMCV CUDA Compiler: 11.1\nMMClassification: 0.25.0+3d4f80d", "seed": 1944256184, "mmcls_version": "0.25.0", "config": "model = dict(\n    type='ImageClassifier',\n    backbone=dict(\n        type='ResNet',\n        depth=18,\n        num_stages=4,\n        out_indices=(3, ),\n        style='pytorch'),\n    neck=dict(type='GlobalAveragePooling'),\n    head=dict(\n        type='LinearClsHead',\n        num_classes=5,\n        in_channels=512,\n        loss=dict(type='CrossEntropyLoss', loss_weight=1.0),\n        topk=(1, )))\ndataset_type = 'ImageNet'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='RandomResizedCrop', size=224),\n    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='ToTensor', keys=['gt_label']),\n    dict(type='Collect', keys=['img', 'gt_label'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='Resize', size=(256, -1)),\n    dict(type='CenterCrop', crop_size=224),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='Collect', keys=['img'])\n]\ndata = dict(\n    samples_per_gpu=32,\n    workers_per_gpu=2,\n    train=dict(\n        type='ImageNet',\n        data_prefix=\n        '/Users/27963/mmclassification/checkpoints/data/flower/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='RandomResizedCrop', size=224),\n            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='ToTensor', keys=['gt_label']),\n            dict(type='Collect', keys=['img', 'gt_label'])\n        ],\n        ann_file=\n        '/Users/27963/mmclassification/checkpoints/data/flower/train.txt',\n        classes=\n        '/Users/27963/mmclassification/checkpoints/data/flower/classes.txt'),\n    val=dict(\n        type='ImageNet',\n        data_prefix='/Users/27963/mmclassification/checkpoints/data/flower/val',\n        ann_file=\n        '/Users/27963/mmclassification/checkpoints/data/flower/val.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='Resize', size=(256, -1)),\n            dict(type='CenterCrop', crop_size=224),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ],\n        classes=\n        '/Users/27963/mmclassification/checkpoints/data/flower/classes.txt'),\n    test=dict(\n        type='ImageNet',\n        data_prefix='data/imagenet/val',\n        ann_file='data/imagenet/meta/val.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='Resize', size=(256, -1)),\n            dict(type='CenterCrop', crop_size=224),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ]))\nevaluation = dict(interval=1, metric='accuracy')\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '/Users/27963/mmclassification/checkpoints/flower.pth'\nresume_from = None\nworkflow = [('train', 1)]\noptimizer = dict(type='SGD', lr=0.001, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(policy='step', step=[1])\nrunner = dict(type='EpochBasedRunner', max_epochs=100)\nwork_dir = 'work_dirs/resnet18_b32_flower.py'\ngpu_ids = [0]\ndevice = 'cuda'\nseed = 1944256184\n", "CLASSES": ["daisy", "dandelion", "rose", "sunflower", "tulip"]}
{"mode": "val", "epoch": 1, "iter": 18, "lr": 0.001, "accuracy_top-1": 93.18182, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 2, "iter": 18, "lr": 0.0001, "accuracy_top-1": 94.93007, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 3, "iter": 18, "lr": 0.0001, "accuracy_top-1": 95.1049, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 4, "iter": 18, "lr": 0.0001, "accuracy_top-1": 94.75525, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 5, "iter": 18, "lr": 0.0001, "accuracy_top-1": 95.1049, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 6, "iter": 18, "lr": 0.0001, "accuracy_top-1": 95.27972, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 7, "iter": 18, "lr": 0.0001, "accuracy_top-1": 95.45454, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 8, "iter": 18, "lr": 0.0001, "accuracy_top-1": 95.8042, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 9, "iter": 18, "lr": 0.0001, "accuracy_top-1": 95.62937, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 10, "iter": 18, "lr": 0.0001, "accuracy_top-1": 95.8042, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 11, "iter": 18, "lr": 0.0001, "accuracy_top-1": 95.45454, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 12, "iter": 18, "lr": 0.0001, "accuracy_top-1": 95.8042, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 13, "iter": 18, "lr": 0.0001, "accuracy_top-1": 95.27972, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 14, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.32867, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 15, "iter": 18, "lr": 0.0001, "accuracy_top-1": 95.8042, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 16, "iter": 18, "lr": 0.0001, "accuracy_top-1": 95.8042, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 17, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.32867, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 18, "iter": 18, "lr": 0.0001, "accuracy_top-1": 95.8042, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 19, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.50349, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 20, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.67832, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 21, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.67832, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 22, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.67832, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 23, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.32867, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 24, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.67832, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 25, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.32867, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 26, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.67832, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 27, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.67832, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 28, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.02797, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 29, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.85315, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 30, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.85315, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 31, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.67832, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 32, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.85315, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 33, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.2028, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 34, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.02797, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 35, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.2028, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 36, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.50349, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 37, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.02797, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 38, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.85315, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 39, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.55245, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 40, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.67832, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 41, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.67832, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 42, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.72727, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 43, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.85315, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 44, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.85315, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 45, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.72727, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 46, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.55245, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 47, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.50349, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 48, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.85315, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 49, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.37762, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 50, "iter": 18, "lr": 0.0001, "accuracy_top-1": 96.85315, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 51, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.72727, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 52, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.72727, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 53, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.72727, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 54, "iter": 18, "lr": 0.0001, "accuracy_top-1": 98.07693, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 55, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.55245, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 56, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.72727, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 57, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.72727, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 58, "iter": 18, "lr": 0.0001, "accuracy_top-1": 98.07693, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 59, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.72727, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 60, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.02797, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 61, "iter": 18, "lr": 0.0001, "accuracy_top-1": 98.07693, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 62, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.02797, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 63, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.37762, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 64, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.37762, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 65, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.55245, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 66, "iter": 18, "lr": 0.0001, "accuracy_top-1": 98.25175, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 67, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.9021, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 68, "iter": 18, "lr": 0.0001, "accuracy_top-1": 98.25175, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 69, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.72727, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 70, "iter": 18, "lr": 0.0001, "accuracy_top-1": 98.07693, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 71, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.9021, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 72, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.9021, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 73, "iter": 18, "lr": 0.0001, "accuracy_top-1": 98.07693, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 74, "iter": 18, "lr": 0.0001, "accuracy_top-1": 98.07693, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 75, "iter": 18, "lr": 0.0001, "accuracy_top-1": 98.07693, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 76, "iter": 18, "lr": 0.0001, "accuracy_top-1": 98.25175, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 77, "iter": 18, "lr": 0.0001, "accuracy_top-1": 98.07693, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 78, "iter": 18, "lr": 0.0001, "accuracy_top-1": 98.07693, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 79, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.55245, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 80, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.9021, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 81, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.9021, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 82, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.72727, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 83, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.37762, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 84, "iter": 18, "lr": 0.0001, "accuracy_top-1": 98.07693, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 85, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.9021, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 86, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.9021, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 87, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.9021, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 88, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.9021, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 89, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.55245, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 90, "iter": 18, "lr": 0.0001, "accuracy_top-1": 98.07693, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 91, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.9021, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 92, "iter": 18, "lr": 0.0001, "accuracy_top-1": 98.25175, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 93, "iter": 18, "lr": 0.0001, "accuracy_top-1": 98.25175, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 94, "iter": 18, "lr": 0.0001, "accuracy_top-1": 98.07693, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 95, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.72727, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 96, "iter": 18, "lr": 0.0001, "accuracy_top-1": 98.42657, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 97, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.9021, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 98, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.55245, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 99, "iter": 18, "lr": 0.0001, "accuracy_top-1": 97.9021, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 100, "iter": 18, "lr": 0.0001, "accuracy_top-1": 98.07693, "accuracy_top-5": 100.0}
